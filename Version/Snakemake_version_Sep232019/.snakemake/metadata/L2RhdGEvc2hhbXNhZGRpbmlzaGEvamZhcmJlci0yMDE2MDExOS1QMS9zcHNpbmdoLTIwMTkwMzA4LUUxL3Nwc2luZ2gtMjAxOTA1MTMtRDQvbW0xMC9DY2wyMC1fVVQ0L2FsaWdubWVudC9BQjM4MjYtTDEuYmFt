{"version": null, "code": "gAMoQyh0AGoBagJ8AGoDgwF9EnQEagVkAWQCfBKDA30TdAZkA4MBAQBkAFMAcQAoWAUAAABpbnB1dHEBWAYAAABvdXRwdXRxAlgGAAAAcGFyYW1zcQNYCQAAAHdpbGRjYXJkc3EEWAcAAAB0aHJlYWRzcQVYCQAAAHJlc291cmNlc3EGWAMAAABsb2dxB1gHAAAAdmVyc2lvbnEIWAQAAABydWxlcQlYCQAAAGNvbmRhX2VudnEKWA8AAABzaW5ndWxhcml0eV9pbWdxC1gQAAAAc2luZ3VsYXJpdHlfYXJnc3EMWA8AAAB1c2Vfc2luZ3VsYXJpdHlxDVgMAAAAYmVuY2hfcmVjb3JkcQ5YBQAAAGpvYmlkcQ9YCAAAAGlzX3NoZWxscRBYDwAAAGJlbmNoX2l0ZXJhdGlvbnERWAoAAABzaGFkb3dfZGlycRJYEwAAAGVhY2hfZmFzdHFfYmFzZW5hbWVxE1gTAAAAZWFjaF9mYXN0cV9iZWdpbmluZ3EUdHEVXXEWKE5YEwAAAC5SMS5wcm9jZXNzZWQuZmFzdHFxF1gAAAAAcRhYQBMAAAoJCQkJIwoJCQkJbW9kdWxlIGxvYWQgYm93dGllLzItMi4zLjUgfHwgZXhpdCAxCgkJCQltb2R1bGUgbG9hZCBzYW10b29scy8xLjkgfHwgZXhpdCAxCgkJCQltb2R1bGUgbG9hZCBwaWNhcmQvMi4xOC4yNyB8fCBleGl0IDEKCQkJCW1vZHVsZSBsb2FkIGZhc3RxYy8wLjExLjggfHwgZXhpdCAxCgkJCQltb2R1bGUgbG9hZCBxdWFsaW1hcC8yLjIuMSB8fCBleGl0IDEKCQkJCSMKCQkJCVFDX1BBVEg9e1dPUktESVJ9L3tQUk9KRUNUfS97RVhQRVJJTUVOVH0ve1RJVExFfS97R0VOT01FfS97d2lsZGNhcmRzLmRlc2lnbn0vcmVwb3J0L2FsaWdubWVudAoJCQkJbWtkaXIgLXAgJFFDX1BBVEgKCQkJCSMKCQkJCXByaW50ZiAiJXNcbiIgIiMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjLSBDT01NQU5ETElORSAtIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyIgfCB0ZWUgPihjYXQgPiYyKQoJCQkJcHJpbnRmICIlc1xuIiAiYm93dGllLzItMi4zLjUiIHwgdGVlID4oY2F0ID4mMikKCQkJCXByaW50ZiAiJXNcbiIgInNhbXRvb2xzLzEuOSIgfCB0ZWUgPihjYXQgPiYyKQoJCQkJcHJpbnRmICIlc1xuIiAicGljYXJkLzIuMTguMjciIHwgdGVlID4oY2F0ID4mMikKCQkJCXByaW50ZiAiJXNcbiIgImZhc3RxYy8wLjExLjgiIHwgdGVlID4oY2F0ID4mMikKCQkJCXByaW50ZiAiJXNcbiIgInF1YWxpbWFwLzIuMi4xIiB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICJBbGlnbm1lbnQiICB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICIjIiB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIklOUFVUMTogJXNcbiIgIntpbnB1dC5wcm9jZXNzZWRfZndkX2Zhc3RxfSIgIHwgdGVlID4oY2F0ID4mMikKCQkJCXByaW50ZiAiSU5QVVQyOiAlc1xuIiAie2lucHV0LnByb2Nlc3NlZF9yZXZfZmFzdHF9IiAgfCB0ZWUgPihjYXQgPiYyKQoJCQkJcHJpbnRmICIlc1xuIiAiIyIgfCB0ZWUgPihjYXQgPiYyKQoJCQkJcHJpbnRmICJPVVRQVVQxOiAlc1xuIiAie291dHB1dC5iYW19IiAgfCB0ZWUgPihjYXQgPiYyKQoJCQkJcHJpbnRmICJPVVRQVVQyOiAlc1xuIiAie291dHB1dC5iYW1faW5kZXh9IiAgfCB0ZWUgPihjYXQgPiYyKQoJCQkJcHJpbnRmICJPVVRQVVQzOiAlc1xuIiAiJFFDX1BBVEgve2VhY2hfZmFzdHFfYmVnaW5pbmd9LmFsaWdubWVudC50eHQiICB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIk9VVFBVVDQ6ICVzXG4iICIkUUNfUEFUSC97ZWFjaF9mYXN0cV9iZWdpbmluZ30ucGljYXJkLnR4dCIgIHwgdGVlID4oY2F0ID4mMikKCQkJCXByaW50ZiAiT1VUUFVUNTogJXNcbiIgIiRRQ19QQVRIL3tlYWNoX2Zhc3RxX2JlZ2luaW5nfS5zYW10b29scy50eHQiICB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICIrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysiIHwgdGVlID4oY2F0ID4mMikKCQkJCXByaW50ZiAiJXNcbiIgImJvd3RpZTIge2NvbmZpZ19hbGlnbm1lbnRfRGljdFtCT1dUSUUyX1BBSVJFRF19IC0tdGhyZWFkcyB7dGhyZWFkc30gLXgge2NvbmZpZ19yZWZlcmVuY2VfRGljdFtCT1dUSUUyX0lOREVYXX0gLTEge2lucHV0LnByb2Nlc3NlZF9md2RfZmFzdHF9IC0yIHtpbnB1dC5wcm9jZXNzZWRfcmV2X2Zhc3RxfSAyPiAkUUNfUEFUSC97ZWFjaF9mYXN0cV9iZWdpbmluZ30uYWxpZ25tZW50LnR4dCB8IHNhbXRvb2xzIHNvcnQgLS10aHJlYWRzIHt0aHJlYWRzfSAtbSAyRyAtTyBiYW0gLVQge1dPUktESVJ9L3tQUk9KRUNUfS97RVhQRVJJTUVOVH0ve1RJVExFfS97R0VOT01FfS97d2lsZGNhcmRzLmRlc2lnbn0vYWxpZ25tZW50L3t3aWxkY2FyZHMuc2FtcGxlfSAtbyB7b3V0cHV0LmJhbX0udG1wIC0gIiB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICIjIiB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICJqYXZhIC1YbXMxMDAwME0gLVhteDEwMDAwTSAtWFg6UGFyYWxsZWxHQ1RocmVhZHM9e3RocmVhZHN9IC1qYXIgJFBJQ0FSREpBUlBBVEgvcGljYXJkLmphciBNYXJrRHVwbGljYXRlcyBJTlBVVD17b3V0cHV0LmJhbX0udG1wIE9VVFBVVD17b3V0cHV0LmJhbX0gVE1QX0RJUj0vbHNjcmF0Y2gvJFNMVVJNX0pPQklEIE1FVFJJQ1NfRklMRT0kUUNfUEFUSC97ZWFjaF9mYXN0cV9iZWdpbmluZ30ucGljYXJkLnR4dCB7Y29uZmlnX2FsaWdubWVudF9EaWN0W1BJQ0FSRF19IiB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICIjIiB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICJzYW10b29scyBpbmRleCAtQCB7dGhyZWFkc30gLWIge291dHB1dC5iYW19IiB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICIjIiB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICJzYW10b29scyBmbGFnc3RhdCAtLXRocmVhZHMge3RocmVhZHN9IHtvdXRwdXQuYmFtfSA+ICRRQ19QQVRIL3tlYWNoX2Zhc3RxX2JlZ2luaW5nfS5zYW10b29scy50eHQiIHwgdGVlID4oY2F0ID4mMikKCQkJCXByaW50ZiAiJXNcbiIgIiMiIHwgdGVlID4oY2F0ID4mMikKCQkJCXByaW50ZiAiJXNcbiIgInJtIC1yZiB7b3V0cHV0LmJhbX0udG1wIiB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICIjIiB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICJmYXN0cWMgLW8gJFFDX1BBVEggLWYgYmFtIC0tdGhyZWFkcyB7dGhyZWFkc30ge291dHB1dC5iYW19IiB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICIjIiB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICJxdWFsaW1hcCBiYW1xYyAtYmFtIHtvdXRwdXQuYmFtfSAtbnQge3RocmVhZHN9IHtjb25maWdfcXVhbGltYXBfRGljdH0gLW91dGRpciAkUUNfUEFUSC97d2lsZGNhcmRzLnNhbXBsZX1fcXVhbGltYXAiIHwgdGVlID4oY2F0ID4mMikKCQkJCXByaW50ZiAiJXNcbiIgIiMiIHwgdGVlID4oY2F0ID4mMikKCQkJCXByaW50ZiAiJXNcbiIgInB5dGhvbiAuL1B5dGhvbl9TY3JpcHQvYmFtQ2hpcFFDLnB5IC0taW5maWxlIHtvdXRwdXQuYmFtfSAtLW91dGZpbGUgJFFDX1BBVEgve3dpbGRjYXJkcy5zYW1wbGV9X1BCQy50eHQgLS1jb3JlcyB7dGhyZWFkc30iIHwgdGVlID4oY2F0ID4mMikKCQkJCXByaW50ZiAiJXNcbiIgIiMiIHwgdGVlID4oY2F0ID4mMikKCQkJCXByaW50ZiAiJXNcbiIgIkVYRUNVVElORy4uLi4iIHwgdGVlID4oY2F0ID4mMikKCQkJCXByaW50ZiAiJXNcbiIgIiMiIHwgdGVlID4oY2F0ID4mMikKCQkJCXN0YXJ0X3RpbWU9IiQoZGF0ZSAtdSArJXMpIgoJCQkJIwoJCQkJIyMKCQkJCWJvd3RpZTIge2NvbmZpZ19hbGlnbm1lbnRfRGljdFtCT1dUSUUyX1BBSVJFRF19IC0tdGhyZWFkcyB7dGhyZWFkc30gLXgge2NvbmZpZ19yZWZlcmVuY2VfRGljdFtCT1dUSUUyX0lOREVYXX0gLTEge2lucHV0LnByb2Nlc3NlZF9md2RfZmFzdHF9IC0yIHtpbnB1dC5wcm9jZXNzZWRfcmV2X2Zhc3RxfSAyPiAkUUNfUEFUSC97ZWFjaF9mYXN0cV9iZWdpbmluZ30uYWxpZ25tZW50LnR4dCB8IHNhbXRvb2xzIHNvcnQgLS10aHJlYWRzIHt0aHJlYWRzfSAtbSAyRyAtTyBiYW0gLVQge1dPUktESVJ9L3tQUk9KRUNUfS97RVhQRVJJTUVOVH0ve1RJVExFfS97R0VOT01FfS97d2lsZGNhcmRzLmRlc2lnbn0vYWxpZ25tZW50L3t3aWxkY2FyZHMuc2FtcGxlfSAtbyB7b3V0cHV0LmJhbX0udG1wIC0KCQkJCWphdmEgLVhtczEwMDAwTSAtWG14MTAwMDBNIC1YWDpQYXJhbGxlbEdDVGhyZWFkcz17dGhyZWFkc30gLWphciAkUElDQVJESkFSUEFUSC9waWNhcmQuamFyIE1hcmtEdXBsaWNhdGVzIElOUFVUPXtvdXRwdXQuYmFtfS50bXAgT1VUUFVUPXtvdXRwdXQuYmFtfSBNRVRSSUNTX0ZJTEU9JFFDX1BBVEgve2VhY2hfZmFzdHFfYmVnaW5pbmd9LnBpY2FyZC50eHQge2NvbmZpZ19hbGlnbm1lbnRfRGljdFtQSUNBUkRdfQoJCQkJc2FtdG9vbHMgaW5kZXggLUAge3RocmVhZHN9IC1iIHtvdXRwdXQuYmFtfQoKCQkJCXNhbXRvb2xzIGZsYWdzdGF0IC0tdGhyZWFkcyB7dGhyZWFkc30ge291dHB1dC5iYW19ID4gJFFDX1BBVEgve2VhY2hfZmFzdHFfYmVnaW5pbmd9LnNhbXRvb2xzLnR4dAoJCQkJcm0gLXJmIHtvdXRwdXQuYmFtfS50bXAKCQkJCWZhc3RxYyAtbyAkUUNfUEFUSCAtZiBiYW0gLS10aHJlYWRzIHt0aHJlYWRzfSB7b3V0cHV0LmJhbX0KCQkJCXVuc2V0IERJU1BMQVkKCQkJCXF1YWxpbWFwIGJhbXFjIC1iYW0ge291dHB1dC5iYW19IC1udCB7dGhyZWFkc30ge2NvbmZpZ19xdWFsaW1hcF9EaWN0fSAtb3V0ZGlyICRRQ19QQVRIL3t3aWxkY2FyZHMuc2FtcGxlfV9xdWFsaW1hcAoJCQkJbW9kdWxlIGxvYWQgcHl0aG9uLzIuNwoJCQkJcHl0aG9uIC4vUHl0aG9uX1NjcmlwdC9iYW1RQy5weSAtLWluZmlsZSB7b3V0cHV0LmJhbX0gLS1vdXRmaWxlICRRQ19QQVRIL3t3aWxkY2FyZHMuc2FtcGxlfV9QQkMudHh0IC0tY29yZXMge3RocmVhZHN9CgkJCQltb2R1bGUgdW5sb2FkIHB5dGhvbi8yLjcKCQkJCSMjCgkJCQkjCgkJCQllbmRfdGltZT0iJChkYXRlIC11ICslcykiCgkJCQlwcmludGYgIiVzXG4iICIjIiB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICJET05FISEhISIgfCB0ZWUgPihjYXQgPiYyKQoJCQkJcHJpbnRmICIlc1xuIiAiIyIgfCB0ZWUgPihjYXQgPiYyKQoJCQkJcHJpbnRmICJFTEFQU0VEIFRJTUU6ICVzIHNlY29uZHNcbiIgIiQoKCRlbmRfdGltZS0kc3RhcnRfdGltZSkpIiB8IHRlZSA+KGNhdCA+JjIpCgkJCQlwcmludGYgIiVzXG4iICItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0iIHwgdGVlID4oY2F0ID4mMikKCQkJcRllKFgCAAAAb3NxGlgEAAAAcGF0aHEbWAgAAABiYXNlbmFtZXEcWBMAAABwcm9jZXNzZWRfZndkX2Zhc3RxcR1YAgAAAHJlcR5YAwAAAHN1YnEfWAUAAABzaGVsbHEgdHEhdHEiLg==", "rule": "Alignment_Paired", "input": ["/data/shamsaddinisha/jfarber-20160119-P1/spsingh-20190308-E1/spsingh-20190513-D4/mm10/Ccl20-_UT4/pre_process/AB3826-L1.R1.processed.fastq", "/data/shamsaddinisha/jfarber-20160119-P1/spsingh-20190308-E1/spsingh-20190513-D4/mm10/Ccl20-_UT4/pre_process/AB3826-L1.R2.processed.fastq"], "log": [], "params": [], "shellcmd": null, "incomplete": false, "starttime": 1557864538.169337, "endtime": 1557864542.8085814, "job_hash": -4791519064982465366, "conda_env": null, "singularity_img_url": null}