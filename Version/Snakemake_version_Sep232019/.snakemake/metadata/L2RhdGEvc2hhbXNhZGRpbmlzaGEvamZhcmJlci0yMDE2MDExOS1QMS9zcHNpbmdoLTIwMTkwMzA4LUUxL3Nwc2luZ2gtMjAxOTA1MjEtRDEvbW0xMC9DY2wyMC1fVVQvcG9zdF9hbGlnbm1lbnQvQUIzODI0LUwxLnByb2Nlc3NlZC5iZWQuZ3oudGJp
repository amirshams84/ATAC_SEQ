{"version": null, "code": "", "rule": "Post_Alignment", "input": ["/data/shamsaddinisha/jfarber-20160119-P1/spsingh-20190308-E1/spsingh-20190521-D1/mm10/Ccl20-_UT/alignment/AB3824-L1.bam", "/data/shamsaddinisha/jfarber-20160119-P1/spsingh-20190308-E1/spsingh-20190521-D1/mm10/Ccl20-_UT/alignment/AB3824-L1.bam.bai"], "log": [], "params": [], "shellcmd": null, "incomplete": false, "starttime": 1559595399.290374, "endtime": 1559595408.7648795, "job_hash": -5508248732307010682, "conda_env": null, "singularity_img_url": null}